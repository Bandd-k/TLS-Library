format binary as ""

__DEBUG__	= 1
__DEBUG_LEVEL__ = 1

MAX_BITS	= 8192

use32

	db	'MENUET01'	; signature
	dd	1		; header version
	dd	start		; entry point
	dd	i_end		; initialized size
	dd	mem+4096	; required memory
	dd	mem+4096	; stack pointer
	dd	0		; parameters
	dd	0		; path

include 'macros.inc'
purge mov,add,sub
include 'proc32.inc'
include 'debug-fdo.inc'

include 'mpint.inc'

macro dd_n op {
   dd 0 or (((op) and 0FF000000h) shr 24) or \
	   (((op) and 000FF0000h) shr  8) or \
	   (((op) and 00000FF00h) shl  8) or \
	   (((op) and 0000000FFh) shl 24)
}

start:

	mov	esi, mpint_modulo_from_network
	DEBUGF	1,'Modul:\n'
	stdcall print_number48bytes, mpint_modulo_from_network+4
	mov	edi, mpint_modulo
	call	mpint_to_little_endian		; Do not try to call this proc with esi == edi, it will mess up your number!

	mov	esi, mpint_base_from_network
	mov	edi, mpint_base
	call	mpint_to_little_endian

	stdcall mpint_modexp, mpint_result, mpint_base, mpint_exp, mpint_modulo
	stdcall mpint_length, mpint_result
	stdcall mpint_print, mpint_result

	mcall	-1

mpint_base_from_network:
		dd_n 48
		db 0x60,0x89,0x59,0x0A,0x3D,0x1E,0xDE,0x9F,0xBC,0x89,0x2C,0xE8,0x49,0x88,0x43,0xEF,0xA9,0x4F,0xF0,0xF4,0xD7,0xB6,0xA9,0xC6,0x0A,0xE9,0xF3,0xC4,0x93,0x17,0x9E,0x93,0xB0,0xEA,0x4D,0xAC,0x62,0x9B,0x22,0x17,0x69,0x64,0x75,0x8F,0xEE,0xCB,0x85,0x79

mpint_modulo_from_network:
		dd_n 512
		db 0xE5,0x1E,0x75,0x5C,0xE0,0x39,0x53,0x5C,0x10,0x4C,0xB4,0xAA,0x7B,0x8E,0xE3,0x1D,0x31,0xCA,0x27,0xFD,0xAD,0x11,0x1C,0x71,0xB4,0x23,0x88,0xEC,0x48,0xA8,0xDC,0x7D,0xA8,0xFC,0x96,0xFA,0x3F,0x04,0xDC,0x0F,0x87,0xC9,0x72,0x5B,0x9A,0xCB,0xA6,0xB1,0xA8,0xB9,0xE5,0x09,0x01,0x39,0x25,0x1F,0x3E,0x06,0x26,0xE9,0x28,0xBE,0xB8,0x4D,0xEB,0x19,0x5A,0x05,0x1F,0x92,0x21,0x6F,0xDD,0x9B,0x19,0xAF,0x43,0x72,0xEE,0x6C,0xE2,0x24,0xE6,0x94,0x80,0xE3,0xA3,0xF0,0x33,0x28,0x33,0xA9,0x40,0x1A,0x28,0x87,0xEF,0xE6,0x8F,0x0D,0x78,0xC2,0x83,0x47,0x65,0x44,0x33,0xE5,0xD9,0xBE,0xD0,0x13,0x26,0xE8,0xA1,0xE1,0x47,0x4C,0x4E,0xCD,0xBA,0x06,0x6F,0xA7,0xA7,0x24,0xC3,0x49,0x96,0xAE,0x11,0x07,0x69,0xFF,0xD8,0xB2,0x30,0xBC,0x88,0x89,0x06,0x53,0xA6,0xE3,0x58,0xD2,0x08,0xC2,0x69,0xE5,0x07,0x65,0x44,0xD8,0x85,0x1C,0x97,0xCA,0xEF,0xB3,0x33,0xA2,0xF9,0xFA,0x53,0x56,0x5E,0xEF,0x08,0xAE,0x34,0xE7,0xF3,0x0F,0x6F,0x0D,0x0C,0x6B,0xC2,0xEC,0xFC,0xDA,0x3A,0xDD,0x48,0x91,0x48,0x75,0xC9,0x85,0x4B,0xA1,0x5C,0xF2,0x92,0x01,0x07,0x9E,0x11,0x22,0x02,0xA3,0x66,0xC4,0x90,0x60,0xD5,0x9B,0xFE,0x18,0x03,0xC1,0x7C,0xB9,0x5A,0xB7,0x82,0x46,0x50,0x20,0x84,0xF8,0xCC,0x42,0xDE,0x0D,0xF9,0x2C,0x84,0x65,0x0D,0x34,0x89,0x9C,0x01,0xC7,0xCB,0xC3,0xA2,0xA1,0x9D,0x81,0x7D,0x22,0x95,0xF1,0xB4,0xE5,0x90,0x0B,0x20,0x22,0xC4,0xD9,0x11,0xE9,0x49,0xA6,0xBF,0xFF,0xD0,0xCF,0x4E,0x48,0x7A,0x40,0xF7,0x67,0xF0,0x65,0x08,0x1A,0x38,0x89,0xC6,0x77,0x2A,0xCD,0xFB,0x13,0xE5,0x4B,0x50,0xE1,0xFD,0xC7,0xE4,0xD5,0x42,0x99,0xE1,0x3E,0x5E,0xE5,0xBC,0x30,0x56,0x15,0xDC,0xC9,0x92,0x9E,0x7D,0xFF,0xBF,0x19,0x30,0x2C,0xAA,0xC5,0xD4,0xD9,0x22,0x22,0x08,0xE8,0xF6,0xC0,0x34,0x57,0x81,0x4B,0x7D,0xB6,0xA8,0x49,0xFB,0x49,0x97,0x03,0x39,0xE1,0x65,0x5F,0x18,0xBE,0xF5,0x34,0xD0,0xD2,0xCE,0x62,0x14,0x6D,0x38,0x16,0x7F,0x92,0xEF,0x0B,0x6B,0xBC,0xB4,0xF8,0x25,0xAD,0xD4,0xD2,0x5D,0x41,0x39,0x2F,0x65,0xB6,0x12,0x0F,0x79,0xE4,0xCE,0x56,0x7E,0x2A,0xAD,0x0E,0x78,0xA7,0x2D,0x97,0x9F,0x7D,0x50,0x2A,0xB8,0x86,0x39,0xDF,0xC9,0xD9,0x02,0x75,0x61,0x84,0xAD,0xEB,0x8C,0xE5,0x67,0x5C,0x9A,0xD8,0xDB,0x9B,0x71,0x22,0xDA,0x61,0xAB,0xB1,0xF7,0x5B,0x35,0x0D,0xC0,0x5C,0x94,0x9B,0x7F,0x07,0xC4,0xCC,0xD3,0xA7,0xD5,0x89,0x3A,0x5D,0x26,0x60,0xE7,0x4B,0x7C,0xDF,0x88,0xD5,0x4D,0xDE,0x57,0x15,0xD1,0x3E,0x43,0xB4,0x69,0xE6,0x60,0x56,0x14,0x32,0x2C,0x51,0x93,0xAF,0x63,0xBB,0x99,0x21,0xBA,0x4A,0x3A,0x8D,0xCF,0xF8,0x25,0xF8,0x30,0xBD,0x81,0xB8,0x28,0x8E,0x59,0xED,0x38,0xBA,0x56,0xDC,0x4C,0xCB,0x82,0x92,0xAD,0x27,0xDC,0x4C,0x4C,0x19,0xDA,0xB8,0x2F,0x62,0x17,0x01,0x46,0x7F,0x9E,0x68,0xA8,0x42,0x15,0xEF,0x16,0x3D,0x2B,0xEB,0x7C,0x41,0x11,0x5B,0xDE,0xBA,0x99,0x65

mpint_exp:
		dd 3
		db 0x01,0x00,0x01
		db (MPINT_MAX_LEN-3) dup 0


proc print_number48bytes _ptr
	pushad
	mov	esi, [_ptr]
	mov	ecx, 12
.next_dword:
	lodsd
	DEBUGF	1,'%x',eax
	loop	.next_dword
	DEBUGF	1,'\n'
	popad
	ret
endp

include_debug_strings

i_end:

mpint_modulo	rb MPINT_MAX_LEN+4

mpint_base	rb MPINT_MAX_LEN+4

mpint_result	rb MPINT_MAX_LEN+4

mpint_tmp	rb MPINT_MAX_LEN+4

mem: